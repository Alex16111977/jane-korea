/**
 * Jane Korea - Progress Dashboard Component
 * –í–µ—Ä—Å–∏—è: 1.0
 */

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –ø–∞–Ω–µ–ª–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
function renderProgressDashboard(containerId) {
    const container = document.getElementById(containerId);
    if (!container) {
        console.error('[ERROR] Dashboard container not found:', containerId);
        return;
    }
    
    const progress = ProgressTracker.get();
    
    // –ü–æ–¥—Å—á–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const totalTexts = Object.keys(progress.completedTexts).length;
    const totalLessons = Object.keys(progress.completedLessons).length;
    const streak = progress.stats.currentStreak || 0;
    const studyTime = Math.floor(progress.stats.studyTimeMinutes || 0);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
    const achievements = checkAllAchievements(progress);
    
    // HTML –ø–∞–Ω–µ–ª–∏
    const html = `
        <div class="progress-dashboard">
            <div class="dashboard-header">
                <h3>üìä –í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å</h3>
                <button class="reset-progress" onclick="ProgressTracker.resetProgress()">
                    üîÑ –°–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å
                </button>
            </div>
            
            <div class="stats-grid">
                <!-- –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã -->
                <div class="stat-card">
                    <div class="stat-icon">üìñ</div>
                    <div class="stat-value">${totalTexts}</div>
                    <div class="stat-label">–¢–µ–∫—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ</div>
                    <div class="progress-bar">
                        <div class="progress-fill" style="width: ${Math.min((totalTexts/6)*100, 100)}%"></div>
                    </div>
                </div>
                
                <!-- –ì—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É—Ä–æ–∫–∏ -->
                <div class="stat-card">
                    <div class="stat-icon">üìù</div>
                    <div class="stat-value">${totalLessons}</div>
                    <div class="stat-label">–£—Ä–æ–∫–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ</div>
                    <div class="progress-bar">
                        <div class="progress-fill" style="width: ${Math.min((totalLessons/50)*100, 100)}%"></div>
                    </div>
                </div>
                
                <!-- –°–µ—Ä–∏—è –¥–Ω–µ–π -->
                <div class="stat-card">
                    <div class="stat-icon">üî•</div>
                    <div class="stat-value">${streak}</div>
                    <div class="stat-label">–î–Ω–µ–π –ø–æ–¥—Ä—è–¥</div>
                </div>
                
                <!-- –í—Ä–µ–º—è –æ–±—É—á–µ–Ω–∏—è -->
                <div class="stat-card">
                    <div class="stat-icon">‚è±Ô∏è</div>
                    <div class="stat-value">${studyTime}</div>
                    <div class="stat-label">–ú–∏–Ω—É—Ç –æ–±—É—á–µ–Ω–∏—è</div>
                </div>
            </div>
            
            <!-- –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è -->
            <div class="achievements">
                <h4>üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h4>
                <div class="badges">
                    ${achievements.map(a => `
                        <div class="badge ${a.earned ? 'earned' : 'locked'}">
                            ${a.icon} ${a.title}
                        </div>
                    `).join('')}
                </div>
            </div>
        </div>
    `;
    
    container.innerHTML = html;
    console.log('[OK] Dashboard rendered');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
function checkAllAchievements(progress) {
    const totalTexts = Object.keys(progress.completedTexts).length;
    const totalLessons = Object.keys(progress.completedLessons).length;
    const streak = progress.stats.currentStreak || 0;
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ 100% —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const hasPerfectScore = Object.values(progress.completedTexts)
        .some(t => t.quizScore === 100);
    
    return [
        {
            id: 'first_text',
            icon: 'ü•á',
            title: '–ü–µ—Ä–≤—ã–π —Ç–µ–∫—Å—Ç',
            earned: totalTexts >= 1
        },
        {
            id: 'text_master_5',
            icon: 'üìö',
            title: '5 —Ç–µ–∫—Å—Ç–æ–≤',
            earned: totalTexts >= 5
        },
        {
            id: 'perfect_quiz',
            icon: 'üíØ',
            title: '–ò–¥–µ–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç',
            earned: hasPerfectScore
        },
        {
            id: 'streak_7',
            icon: 'üî•',
            title: '–ù–µ–¥–µ–ª—å–Ω–∞—è —Å–µ—Ä–∏—è',
            earned: streak >= 7
        },
        {
            id: 'grammar_guru_10',
            icon: 'üìù',
            title: '10 —É—Ä–æ–∫–æ–≤',
            earned: totalLessons >= 10
        },
        {
            id: 'text_master_10',
            icon: 'üéì',
            title: '10 —Ç–µ–∫—Å—Ç–æ–≤',
            earned: totalTexts >= 10
        }
    ];
}

// –≠–∫—Å–ø–æ—Ä—Ç
window.ProgressDashboard = {
    render: renderProgressDashboard,
    checkAchievements: checkAllAchievements
};

console.log('[OK] ProgressDashboard loaded');
