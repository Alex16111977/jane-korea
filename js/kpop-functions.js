// üåü –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è K-POP —Å–µ–∫—Ü–∏–∏ üåü
// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥—è—â–µ–≥–æ—Å—è –∞—É–¥–∏–æ
let currentAudio = null;
let currentPlayingGroup = null;
let audioInitialized = false; // –§–ª–∞–≥ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤

// üì± –ü—Ä–æ—Å—Ç–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞—É–¥–∏–æ
function initAudioForMobile() {
    if (audioInitialized) return;
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞—É–¥–∏–æ —ç–ª–µ–º–µ–Ω—Ç—ã
    const audioElements = document.querySelectorAll('audio');
    
    // –ü—Ä–æ—Å—Ç–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∞—É–¥–∏–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    audioElements.forEach(audio => {
        audio.load();
        audio.volume = 0.8;
    });
    
    audioInitialized = true;
    console.log('[OK] Audio initialized');
}

// üéµ –§—É–Ω–∫—Ü–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è/–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–µ—Å–Ω–∏ –≥—Ä—É–ø–ø—ã (—Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –º–æ–±–∏–ª—å–Ω—ã—Ö)
function playGroupSong(groupName) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–≥—Ä–∞–µ—Ç –ª–∏ —ç—Ç–∞ –≥—Ä—É–ø–ø–∞ —Å–µ–π—á–∞—Å
    if (currentPlayingGroup === groupName && currentAudio && !currentAudio.paused) {
        // –ï—Å–ª–∏ —ç—Ç–∞ –≥—Ä—É–ø–ø–∞ —É–∂–µ –∏–≥—Ä–∞–µ—Ç - –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
        stopCurrentMusic();
        showMusicNotification('–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ ‚ú®');
        return;
    }
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∞—É–¥–∏–æ –µ—Å–ª–∏ –∏–≥—Ä–∞–µ—Ç
    if (currentAudio) {
        stopCurrentMusic();
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –∞—É–¥–∏–æ —ç–ª–µ–º–µ–Ω—Ç
    const audio = document.getElementById(groupName + '-audio');
    if (audio) {
        currentAudio = audio;
        currentPlayingGroup = groupName;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç
        addPlayingEffect(groupName);
        
        // üì± –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞—É–¥–∏–æ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ (–æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º)
        if (!audioInitialized) {
            audio.muted = false;
            audio.load(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞—É–¥–∏–æ
            audioInitialized = true;
            console.log('[OK] Audio initialized during playback');
        }
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∞—É–¥–∏–æ
        audio.muted = false;
        audio.volume = 0.8;
        
        // –ü—ã—Ç–∞–µ–º—Å—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
        const playPromise = audio.play();
        
        if (playPromise !== undefined) {
            playPromise.then(() => {
                console.log(`[OK] Playing ${groupName} song`);
                showMusicNotification('–ò–≥—Ä–∞–µ—Ç: ' + getGroupDisplayName(groupName));
            }).catch(error => {
                console.log(`[ERROR] Cannot play ${groupName}: ${error.message}`);
                
                // –£–±–∏—Ä–∞–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ
                removePlayingEffect(groupName);
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ–¥—Å–∫–∞–∑–∫—É
                if (error.name === 'NotAllowedError') {
                    showMusicNotification('–ö–ª–∏–∫–Ω–∏—Ç–µ –µ—â–µ —Ä–∞–∑ –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è! üéµ');
                } else {
                    showMusicNotification('–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è ‚ö†Ô∏è');
                }
            });
        }
        
        // –£–±–∏—Ä–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç –∫–æ–≥–¥–∞ –ø–µ—Å–Ω—è –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è
        audio.onended = () => {
            stopCurrentMusic();
        };
        
    } else {
        console.log(`[ERROR] Audio element ${groupName}-audio not found`);
        showMusicNotification('–û—à–∏–±–∫–∞: –∞—É–¥–∏–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ ‚ö†Ô∏è');
    }
}

// üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –º—É–∑—ã–∫—É
function stopCurrentMusic() {
    if (currentAudio) {
        currentAudio.pause();
        currentAudio.currentTime = 0;
    }
    
    if (currentPlayingGroup) {
        removePlayingEffect(currentPlayingGroup);
    }
    
    currentAudio = null;
    currentPlayingGroup = null;
}

// üé® –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
function addPlayingEffect(groupName) {
    const container = document.querySelector(`[onclick="playGroupSong('${groupName}')"]`);
    if (container) {
        container.classList.add('playing');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø—É–ª—å—Å–∏—Ä—É—é—â–∏–π —ç—Ñ—Ñ–µ–∫—Ç
        container.style.animation = 'musicPulse 1s ease-in-out infinite';
        container.style.boxShadow = '0 0 30px rgba(255,107,157,0.8)';
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
        const hint = container.querySelector('.video-hint');
        if (hint) {
            hint.innerHTML = 'üîä –ö–ª–∏–∫: –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å';
            hint.style.background = 'rgba(255,107,157,0.6)';
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –º—É–∑—ã–∫–∞–ª—å–Ω—É—é –∏–∫–æ–Ω–∫—É
        const overlay = container.querySelector('.group-overlay');
        const musicIcon = document.createElement('div');
        musicIcon.className = 'playing-icon';
        musicIcon.innerHTML = 'üéµ';
        musicIcon.style.cssText = `
            position: absolute;
            top: 10px;
            right: 10px;
            font-size: 24px;
            animation: bounce 0.6s ease-in-out infinite alternate;
        `;
        overlay.appendChild(musicIcon);
    }
}

// üé® –£–±–∏—Ä–∞–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
function removePlayingEffect(groupName) {
    const container = document.querySelector(`[onclick="playGroupSong('${groupName}')"]`);
    if (container) {
        container.classList.remove('playing');
        container.style.animation = '';
        container.style.boxShadow = '';
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—É—é –ø–æ–¥—Å–∫–∞–∑–∫—É
        const hint = container.querySelector('.video-hint');
        if (hint) {
            hint.innerHTML = 'üéµ –ö–ª–∏–∫: –∏–≥—Ä–∞—Ç—å';
            hint.style.background = 'rgba(255,107,157,0.2)';
        }
        
        // –£–±–∏—Ä–∞–µ–º –º—É–∑—ã–∫–∞–ª—å–Ω—É—é –∏–∫–æ–Ω–∫—É
        const playingIcon = container.querySelector('.playing-icon');
        if (playingIcon) {
            playingIcon.remove();
        }
    }
}

// üè∑Ô∏è –ü–æ–ª—É—á–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ –∏–º—è –≥—Ä—É–ø–ø—ã –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function getGroupDisplayName(groupName) {
    const names = {
        'blackpink': 'BLACKPINK Î∏îÎûôÌïëÌÅ¨',
        'bts': 'BTS Î∞©ÌÉÑÏÜåÎÖÑÎã®',
        'newjeans': 'NewJeans Îâ¥ÏßÑÏä§',
        'aespa': 'aespa Ïï†Ïä§Ìåå'
    };
    return names[groupName] || groupName;
}

// üîî –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–∏
function showMusicNotification(message) {
    // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    const notification = document.createElement('div');
    notification.className = 'music-notification';
    notification.innerHTML = `
        <div class="notification-content">
            <span class="notification-icon">üéµ</span>
            <span class="notification-text">${message}</span>
        </div>
    `;
    
    // –°—Ç–∏–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: linear-gradient(135deg, #ff6b9d, #c44569);
        color: white;
        padding: 15px 25px;
        border-radius: 25px;
        box-shadow: 0 10px 30px rgba(255,107,157,0.4);
        z-index: 1000;
        font-weight: bold;
        animation: slideIn 0.5s ease-out;
    `;
    
    document.body.appendChild(notification);
    
    // –£–±–∏—Ä–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        if (notification.parentNode) {
            notification.style.animation = 'slideOut 0.5s ease-in';
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.parentNode.removeChild(notification);
                }
            }, 500);
        }
    }, 3000);
}

// –î–æ–±–∞–≤–ª—è–µ–º CSS –∞–Ω–∏–º–∞—Ü–∏–∏
const musicStyles = document.createElement('style');
musicStyles.textContent = `
    @keyframes musicPulse {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.05); }
    }
    
    @keyframes bounce {
        0% { transform: translateY(0px) rotate(0deg); }
        100% { transform: translateY(-10px) rotate(15deg); }
    }
    
    @keyframes slideIn {
        0% { 
            transform: translateX(100%);
            opacity: 0;
        }
        100% { 
            transform: translateX(0);
            opacity: 1;
        }
    }
    
    @keyframes slideOut {
        0% { 
            transform: translateX(0);
            opacity: 1;
        }
        100% { 
            transform: translateX(100%);
            opacity: 0;
        }
    }
    
    .kpop-group-container.playing {
        transform: translateY(-8px) scale(1.02);
    }
    
    .video-hint {
        margin-top: 8px;
        font-size: 0.9em;
        opacity: 0.9;
        transition: all 0.3s ease;
    }
    
    .kpop-group-container:hover .video-hint {
        opacity: 1;
        transform: translateY(-2px);
    }
`;
document.head.appendChild(musicStyles);

// üì± –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∏ touch —Å–æ–±—ã—Ç–∏–π
document.addEventListener('DOMContentLoaded', function() {
    const groupContainers = document.querySelectorAll('.kpop-group-container');
    
    // üñ±Ô∏è –≠—Ñ—Ñ–µ–∫—Ç—ã –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ (hover)
    groupContainers.forEach(container => {
        container.addEventListener('mouseenter', function() {
            if (!this.classList.contains('playing')) {
                this.style.filter = 'brightness(1.1)';
                this.style.transform = 'translateY(-8px) scale(1.02)';
            }
        });
        
        container.addEventListener('mouseleave', function() {
            if (!this.classList.contains('playing')) {
                this.style.filter = '';
                this.style.transform = '';
            }
        });
        
        // üì± Touch —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ (—É–±—Ä–∞–ª–∏ preventDefault)
        container.addEventListener('touchstart', function(e) {
            // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –∫–∞—Å–∞–Ω–∏—è
            this.style.filter = 'brightness(1.2)';
            this.style.transform = 'translateY(-4px) scale(1.01)';
        });
        
        container.addEventListener('touchend', function(e) {
            // –£–±–∏—Ä–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç –∫–∞—Å–∞–Ω–∏—è –µ—Å–ª–∏ –Ω–µ –∏–≥—Ä–∞–µ—Ç
            if (!this.classList.contains('playing')) {
                this.style.filter = '';
                this.style.transform = '';
            }
        });
    });
    
    // –ü—Ä–æ—Å—Ç–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞—É–¥–∏–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    const audioElements = document.querySelectorAll('audio');
    audioElements.forEach(audio => {
        audio.preload = 'auto';
        audio.volume = 0.8;
    });
    
    console.log('[OK] Audio elements initialized');
});

// üîä –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞—É–¥–∏–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
function debugAudioStatus() {
    console.log('=== AUDIO DEBUG INFO ===');
    console.log('Audio initialized:', audioInitialized);
    console.log('Current playing group:', currentPlayingGroup);
    console.log('Audio elements count:', document.querySelectorAll('audio').length);
    
    document.querySelectorAll('audio').forEach(audio => {
        console.log(`${audio.id}:`, {
            paused: audio.paused,
            currentTime: audio.currentTime,
            readyState: audio.readyState,
            volume: audio.volume,
            muted: audio.muted
        });
    });
}
